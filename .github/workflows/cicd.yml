name: CI/CD Pipeline

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      PORT: ${{ secrets.PORT }}
      APP_PORT: ${{ secrets.APP_PORT }}
      JWT_KEY: ${{ secrets.JWT_KEY }}
      BACKEND_HOSTNAME: ${{ secrets.BACKEND_HOSTNAME }}
      BACKEND_PORT: ${{ secrets.BACKEND_PORT }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
    steps:
      - name: Get code
        uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          architecture: "x64"
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: python
      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r back-end/requirements.txt
          pip install -r back-end/requirements_test.txt
      - name: Install frontend dependencies
        run: |
          pip install -r front-end/requirements.txt
          pip install -r front-end/requirements_test.txt
      - name: CodeQL Autobuild
        uses: github/codeql-action/autobuild@v4
      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v4
      #https://docs.github.com/en/actions/tutorials/build-and-test-code/python#using-ruff-to-lint-andor-format-code
      - name: Install code linting tool
        run: pip install ruff
      - name: Lint backend code
        run: ruff check --output-format=github back-end/
        continue-on-error: true
      - name: Lint frontend code
        run: ruff check --output-format=github front-end/
        continue-on-error: true
      - name: Run backend tests
        run: pytest back-end/test_app.py
        continue-on-error: true
      - name: Run frontend tests
        run: pytest front-end/test_app.py
        continue-on-error: true
      #https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
