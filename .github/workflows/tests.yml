name: Tests

on:
  push:
    branches: [ "master"]
  pull_request:
    branches: [ "master"]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    name: Backend Tests (Python ${{ matrix.python-version }})
    
    strategy:
      matrix:
        python-version: ['3.10']
    
    defaults:
      run:
        working-directory: ./back-end
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-backend-${{ matrix.python-version }}-${{ hashFiles('back-end/requirements_test.txt', 'back-end/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-backend-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt
    
    - name: Run backend tests with pytest
      run: |
        python -m pytest test_app.py -v --tb=short

  frontend-tests:
    runs-on: ubuntu-latest
    name: Frontend Tests (Python ${{ matrix.python-version }})
    
    strategy:
      matrix:
        python-version: ['3.10']
    
    defaults:
      run:
        working-directory: ./front-end
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-frontend-${{ matrix.python-version }}-${{ hashFiles('front-end/requirements_test.txt', 'front-end/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-frontend-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt
    
    - name: Run frontend tests with pytest
      run: |
        python -m pytest test_app.py -v --tb=short

  test-summary:
    runs-on: ubuntu-latest
    name: Test Summary
    needs: [backend-tests, frontend-tests]
    if: always()
    
    steps:
    - name: Test Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Backend Tests | ${{ needs.backend-tests.result == 'success' && 'Passed' || 'Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Frontend Tests | ${{ needs.frontend-tests.result == 'success' && 'Passed' || 'Failed' }} |" >> $GITHUB_STEP_SUMMARY
